'''
The look and say problem - for each number in the sequence, that number can be generated by looking at the previous
number and count and saying how much of each number followed by that number

[1, 11, 21, 1211, 111221, 312211, 13112221]
'''

def lookAndSay(n):
    if n == 1:
        return '1'
    prev = '1'
    for _ in range(1, n):
        cur = []
        start = 0
        end = 0
        while True:
            while end < len(prev) and prev[end] == prev[start]:
                end += 1
            cur.append(str(end - start)) # how many
            cur.append(prev[start]) # of this number
            if end == len(prev):
                break
            start = end
        prev = "".join(cur)
    return prev

print(lookAndSay(6))